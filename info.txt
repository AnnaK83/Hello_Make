     
                    Отличие компилируемых и интерпретируемых языков


Языки, для которых требуется компилятор, называются компилируемыми. 
Компилятор - это программа которая обрабатывает текст на языке программирования и создает по нему последовательность команд микропроцессора. 
Чтобы запустить программу на выполнение, надо прогнать ее через компилятор, получить исполняемый модуль, например, в операционной системе Windows это файл 
с расширением .exe, и только после этого запустить его на выполнение.  

Примеры компилируемых языков: C, C+, Erlang, Haskell, Rust и Go

"+": 1. Обычно программы, скомпилированные в машинный код, выполняются быстрее интерпретируемых. 
     2. Кроме того, в таких языках разработчик лучше контролирует аппаратные средства (управление памятью, использование ЦП и т.д.).

"-": 1. Необходимо время для компиляции программы перед ее выполнением.
        Каждый раз при внесении изменений нужно будет «пересобирать» программу. 
     2. Сгенерированный двоичный код зависит от платформы.


Языки, для которых требуется интерпретатор, называются интерпретируемыми.
Интерпретатор переводит каждую строку программы в команды микропроцессора сразу после запуска текстовой программы. 

Примеры интерпретируемых языков: PHP, Ruby, Python и JavaScript.

"+": 1. Исходный код программы выполняют интерпретаторы, поэтому сам код не зависит от платформы.
     2. Процесс написания и тестирования интерпретируемой программы проходит проще, так как нет необходимости в промежуточном шаге компиляции.

"-"     Скорость выполнения. Она обычно ниже, чем в компилируемых языках. 
